{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/contactsReducer.js","redux/store.js","redux/operations.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","itemsReducer","createReducer","_","payload","state","filter","contact","name","length","alert","id","filterReducer","loading","contactsReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","devTools","process","STORE","persistor","persistStore","axios","defaults","baseURL","getFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","className","s","contactList","map","number","contactListItem","type","deleteBtn","onClick","contactId","a","delete","error","ContactForm","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","post","data","operations","contactForm","contactFormLabel","required","onChange","pattern","numberFormat","contactFormBtn","Filter","actions","target","App","useEffect","get","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6af941a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2g9P0\",\"contactListItem\":\"ContactList_contactListItem__2K8SW\",\"deleteBtn\":\"ContactList_deleteBtn__1O1oY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1UHRv\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction(\n  'phonebook/fetchContactRequest',\n);\nexport const fetchContactSuccess = createAction(\n  'phonebook/fetchContactSuccess',\n);\nexport const fetchContactError = createAction('phonebook/fetchContactError');\n\nexport const addContactRequest = createAction('phonebook/addContactRequest');\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phonebook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phonebook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phonebook/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n\n// export const addContact = (name, number) => dispatch => {\n//   const contact = { name, number };\n\n//   dispatch({ type: 'phonebook/addContactRequest' });\n\n//   axios\n//     .post('/contacts', contact)\n//     .then(({ data }) =>\n//       dispatch({ type: 'phonebook/addContactSuccess', payload: data }),\n//     )\n//     .catch(error =>\n//       dispatch({ type: 'phonebook/addContactError', payload: error }),\n//     );\n// };\n\n// export const addContact = createAction(\n//   'phonebook/addContact',\n//   (name, number) => ({\n//     payload: {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     },\n//   }),\n// );\n\n// export const deleteContact = createAction('phonebook/deleteContact');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from 'redux/actions';\n\nconst itemsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    const uniqName = state.filter(contact => payload.name === contact.name);\n    return uniqName.length !== 1\n      ? [...state, payload]\n      : [...state] && alert(`${payload.name} is already in contacts`);\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from 'redux/contactsReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst STORE = { store, persistor };\n\nexport default STORE;\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from 'redux/actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// export const getVisibleContacts = state => {\n//   const allContacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as operations from 'redux/operations';\nimport { getVisibleContacts } from 'redux/selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactListItem}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            className={s.deleteBtn}\n            onClick={() => dispatch(operations.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as operations from 'redux/operations';\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(operations.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.contactFormLabel}>\n        Name\n        <input\n          type=\"text\"\n          required\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.contactFormLabel}>\n        Number\n        <input\n          type=\"tel\"\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          required\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n        <p className={s.numberFormat}>Format: xxx-xx-xx</p>\n      </label>\n      <button type=\"submit\" className={s.contactFormBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from 'redux/actions';\nimport { getFilter } from 'redux/selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.filter}>\n      Find contacts by name{' '}\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport * as operations from 'redux/operations';\nimport ContactList from './components/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3MZL8\",\"contactFormLabel\":\"ContactForm_contactFormLabel__3802f\",\"contactFormBtn\":\"ContactForm_contactFormBtn__1oX5D\",\"numberFormat\":\"ContactForm_numberFormat__2LDUM\"};"],"sourceRoot":""}